{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <button id="brokerBtn" class="btn btn-outline-secondary">Test Broker</button>
                <button id="authBrokerBtn" class="btn btn-outline-secondary">Test Auth via Broker</button>
                <button id="loggerBtn" class="btn btn-outline-secondary">Test Logger</button>
                <button id="mailBtn" class="btn btn-outline-secondary">Test Mailer</button>

                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        let brokerBtn = document.getElementById("brokerBtn");
        let loggerBtn = document.getElementById("loggerBtn");
        let mailBtn = document.getElementById("mailBtn");
        let authBrokerBtn = document.getElementById("authBrokerBtn");
        let output = document.getElementById("output");
        let sent = document.getElementById("payload");
        let received = document.getElementById("received");

        loggerBtn.addEventListener("click", () => {
            const payload = {
                action: "log",
                log: {
                    name: "event",
                    data: "some kind of data"
                }
            };

            const headers = new Headers();
            headers.append("Content-Type", "application/json");

            const body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers: headers,
            }

            fetch("http:\/\/localhost:8080/handle", body)
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, null, 4);
                received.innerHTML = JSON.stringify(data, null, 4);
                if (data.error) {
                    output.innerHTML += `<br><strong>Error:</strong>${data.message}<br>`;
                } else {
                    output.innerHTML += `<br><strong>Response from logger service:</strong> ${data.message}<br>`
                }
            })
            .catch(error => output += `<br><br><strong>Error:</strong> ${error}<br>`)
        })

        mailBtn.addEventListener("click", () => {
            const payload = {
                action: "mail",
                mail: {
                    from: "Djordje",
                    to: "Jon",
                    subject: "work mail",
                    message: "great job Jon!",
                }
            };

            const headers = new Headers();
            headers.append("Content-Type", "application/json");

            const body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers: headers,
            }

            fetch("http:\/\/localhost:8080/handle", body)
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, null, 4);
                received.innerHTML = JSON.stringify(data, null, 4);
                if (data.error) {
                    output.innerHTML += `<br><strong>Error:</strong>${data.message}<br>`;
                } else {
                    output.innerHTML += `<br><strong>Response from mail service: </strong>${data.message}<br>`
                }
            })
            .catch(error => output += `<br><br><strong>Error: </strong>${error}<br>`)
        })

        authBrokerBtn.addEventListener("click", () => {
            const payload = {
                action: "auth",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret",
                }
            };

            const headers = new Headers();
            headers.append("Content-Type", "application/json");

            const body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers: headers,
            }

            fetch("http:\/\/localhost:8080/handle", body)
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, null, 4);
                received.innerHTML = JSON.stringify(data, null, 4);
                if (data.error) {
                    output.innerHTML += `<br><strong>Error:</strong>${data.message}<br>`;
                } else {
                    output.innerHTML += `<br><strong>Response from auth via broker service:</strong> ${data.message}<br>`
                }
            })
            .catch(error => output += `<br><br><strong>Error:</strong> ${error}<br>`)
        })

        brokerBtn.addEventListener("click", () => {
            const body = {
                method: "POST"
            }
            fetch("http:\/\/localhost:8080", body)
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = "empty POST request";
                received.innerHTML = JSON.stringify(data, null, 4);
                if (data.error) {
                    console.log(data.message)
                } else {
                    output.innerHTML += `<br><strong>Response from broker service:</strong> ${data.message}\n`
                }
            })
            .catch(error => output += `<br><br><strong>Error from broker service:</strong> ${error}<br>`)
        })
    </script>
{{end}}
